{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(timeout 30 npx expo start --dev-client --port 8083)",
      "Bash(npm start)",
      "Bash(npx expo start:*)",
      "Bash(npx react-native start:*)",
      "Bash(rm:*)",
      "Bash(node:*)",
      "Bash(timeout 15 npx expo start --dev-client --port 8085)",
      "Bash(npx react-native-syntax-checker:*)",
      "Bash(npm run lint)",
      "Bash(npm run:*)",
      "Bash(timeout 10 npm start)",
      "Bash(timeout 15 npm start)",
      "Bash(gh:*)",
      "Bash(git --version)",
      "Bash(winget install:*)",
      "Bash(powershell:*)",
      "Bash(git remote remove:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(winget:*)",
      "Bash(msiexec:*)",
      "Bash(choco:*)",
      "Bash(refreshenv)",
      "Bash(\"C:\\Program Files\\Amazon\\AWSCLIV2\\aws.exe\" --version)",
      "Bash(\"C:\\Program Files\\Amazon\\AWSCLIV2\\aws.exe\" configure)",
      "Bash(aws cloudformation describe-stack-resources:*)",
      "Bash(\"C:\\Program Files\\Amazon\\AWSCLIV2\\aws.exe\" sts get-caller-identity)",
      "Bash(configure-aws.bat)",
      "Bash(cp:*)",
      "Bash(zip:*)",
      "Bash(\"C:\\Program Files\\Amazon\\AWSCLIV2\\aws.exe\" lambda update-function-code --function-name LifeCompass-ReferralSyncHandler --zip-file fileb://lambda-deployment.zip --region ap-southeast-2)",
      "Bash(\"C:\\Program Files\\Amazon\\AWSCLIV2\\aws.exe\" configure list)",
      "Bash(curl:*)",
      "Bash(mkdir:*)",
      "Bash(ls:*)",
      "Bash(grep:*)",
      "Bash(awk:*)",
      "Bash(timeout 15 npx expo start --dev-client --port 8087)",
      "Bash(mv:*)",
      "Bash(npm start:*)",
      "Bash(find:*)",
      "Bash(npx expo r:*)",
      "Bash(awk:*)",
      "Bash(sed:*)",
      "Bash(for file in \"D:\\Apps Productions Builds\\LCiOS-2\\DevBuild\\src\\screens\\Onboarding\\data\"/*GoalStats.js)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(python3:*)",
      "Bash(for goal in \"Secure Flexible Work with New Skills\" \"Move into Management Role\" \"Switch to Tech Career\" \"Build 6-Month Emergency Fund\" \"Start Profitable Side Hustle\" \"Plan Path to Homeownership\" \"Exercise for Mental Health\" \"Prevent Chronic Disease\" \"Build Fitness Routine\" \"Find Long-Term Partner\" \"Build Strong Social Circle\" \"Strengthen Romantic Relationship\" \"Earn Professional Certification\" \"Launch Creative Project\" \"Learn Practical Life Skill\" \"Explore Australian Nature\" \"Travel Around Australia\" \"Develop New Hobby\" \"Volunteer Using Professional Skills\" \"Find Purpose-Driven Work\" \"Get Involved in Local Community\" \"Find Quality Shared Housing\" \"Live Sustainably/Zero-Waste\" \"Create Organized Living Space\")",
      "Bash(do echo -n \"Checking: $goal ... \")",
      "Bash(if grep -q \"\"\"$goal\"\":\" \"D:\\Apps Productions Builds\\LCiOS-2\\DevBuild\\src\\screens\\Onboarding\\data\\australianGoalStats.js\")",
      "Bash(then echo \"✓ Found\")",
      "Bash(else echo \"✗ MISSING\")",
      "Bash(fi)",
      "Bash(timeout 30 npx expo start --dev-client --port 8087)",
      "Bash(timeout 15 npx expo start --dev-client --port 8086)",
      "Bash(python:*)",
      "Bash(npm install:*)",
      "Bash(timeout 30 npm start)",
      "Bash(timeout 30 npx expo start --dev-client --port 8086)",
      "Bash(timeout 10 npx expo start --dev-client --port 8087)",
      "Bash(timeout 20 npx expo start --dev-client --port 8087)",
      "Bash(git restore:*)",
      "Bash(git checkout:*)",
      "Bash(timeout 10 npx expo start --dev-client --port 8085)"
    ],
    "deny": []
  }
}